name: Build and Release .mcaddon

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create_new_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npx tsc

      - name: Extract version from BP manifest
        id: get_version
        run: |
          VERSION=$(jq -r '.header.version | join(".")' BP/manifest.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare BP for packaging
        run: |
          mkdir -p TNTCoin-BP
          cp -r BP/items TNTCoin-BP/
          cp -r BP/scripts TNTCoin-BP/
          cp BP/manifest.json TNTCoin-BP/
          cp BP/pack_icon.png TNTCoin-BP/
          cp LICENSE TNTCoin-BP/

      - name: Prepare RP for packaging
        run: |
          mkdir -p TNTCoin-RP
          cp -r RP/font TNTCoin-RP/
          cp -r RP/sounds TNTCoin-RP/
          cp -r RP/textures TNTCoin-RP/
          cp -r RP/ui TNTCoin-RP/
          cp RP/manifest.json TNTCoin-RP/
          cp RP/pack_icon.png TNTCoin-RP/
          cp LICENSE TNTCoin-RP/

      - name: Create .mcaddon file
        run: |
          mkdir -p TNTCoin-addon
          zip -r TNTCoin-BP.zip TNTCoin-BP
          zip -r TNTCoin-RP.zip TNTCoin-RP
          cd TNTCoin-addon
          zip -r ../TNTCoin.v${{ steps.get_version.outputs.VERSION }}.mcaddon .
          cd ..

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload .mcaddon File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./TNTCoin.v${{ steps.get_version.outputs.VERSION }}.mcaddon
          asset_name: TNTCoin.v${{ steps.get_version.outputs.VERSION }}.mcaddon
          asset_content_type: application/zip
