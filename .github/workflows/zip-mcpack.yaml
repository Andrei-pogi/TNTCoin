name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create_new_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npx tsc
      
      - name: Extract version from manifest
        id: get_version
        run: |
          VERSION=$(jq -r '.header.version | join(".")' manifest.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create .mcpack file
        run: |
          mkdir -p TNTCoin-BP-mcpack
          cp -r items TNTCoin-BP-mcpack/
          cp -r scripts TNTCoin-BP-mcpack/
          cp -r texts TNTCoin-BP-mcpack/
          cp LICENSE TNTCoin-BP-mcpack/
          cp manifest.json TNTCoin-BP-mcpack/
          cp pack_icon.png TNTCoin-BP-mcpack/
          cd TNTCoin-BP-mcpack
          zip -r ../TNTCoin-BP.v${{ steps.get_version.outputs.VERSION }}.mcpack .
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./TNTCoin-BP.v${{ steps.get_version.outputs.VERSION }}.mcpack
          asset_name: TNTCoin-BP.v${{ steps.get_version.outputs.VERSION }}.mcpack
          asset_content_type: application/zip
